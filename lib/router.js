functions=require("./functions");LZString=require("./crypto/lz-string");UrlBase64=require("./crypto/urlbase64");asset=require("./asset");list=require("./list");proc=require("./proc");source=require("./source");view=require("./view");xauth=require("./xauth");url=require("url");exports.route=route;function route(request,modules){if(typeof request.url=="string"){var xpath=request.url.split("/");for(var i=0;i<xpath.length;i++){if(xpath[i]==""){xpath.splice(i,1);i--}else{xpath[i]=decodeURIComponent(xpath[i])}}var result={error:1,info:"Your request was not understood!"};if(JSON.stringify(xpath)!=JSON.stringify(last_xpath)&&xpath[0]!="y"&&xpath[0]!="z"){console.log(" [.] routing request "+JSON.stringify(xpath))}last_xpath=xpath;if(xpath.length==0){result={info:" *** Welcome to the hybridd JSON REST-API. Please enter a path. For example: /asset/btc/command/help *** ",error:0,id:null}}else{if(xpath[0]=="a"||xpath[0]=="asset"){result=asset.process(request,xpath)}if(xpath[0]=="l"||xpath[0]=="list"){result=list.process(request,xpath)}if(xpath[0]=="n"||xpath[0]=="net"||xpath[0]=="network"){if(xpath.length>1){if(xpath[1]=="peers"){result=network.getPeers()}}}if(xpath[0]=="p"||xpath[0]=="proc"){result=proc.process(request,xpath)}if(xpath[0]=="s"||xpath[0]=="source"){result=source.process(request,xpath)}if(xpath[0]=="v"||xpath[0]=="view"){result=view.serve(request,xpath)}if(xpath[0]=="x"||xpath[0]=="xauth"){if(xpath.length>1){result=xauth.xauth(request,xpath)}}if(xpath[0]=="y"||xpath[0]=="ychan"){if(xpath.length>3){try{request.url=xauth.xplain(xpath[1],xpath[2],UrlBase64.safeDecompress(xpath[3]));request.sessionID=xpath[1];request.nonce=xpath[2];result=UrlBase64.safeCompress(xauth.xcrypt(xpath[1],xpath[2],route(request,modules)))}catch(err){result=""}}}if(xpath[0]=="z"||xpath[0]=="zchan"){if(xpath.length>=3){try{request.url=LZString.decompressFromEncodedURIComponent(xauth.xplain(xpath[1],xpath[2],UrlBase64.safeDecompress(xpath[3])));request.sessionID=xpath[1];request.nonce=xpath[2];result=UrlBase64.safeCompress(xauth.xcrypt(xpath[1],xpath[2],LZString.compressToEncodedURIComponent(route(request,modules))))}catch(err){result=""}}}if(typeof xpath[0]=="undefined"||xpath[0].length<=1){result.info=undefined}}return JSON.stringify(result)}return""}
