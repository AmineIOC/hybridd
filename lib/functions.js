exports.clean=clean;exports.activate=activate;exports.sortArrayByObjKey=sortArrayByObjKey;exports.sortObjectByKey=sortObjectByKey;exports.sequential=sequential;exports.implode=implode;exports.uglyMerge=uglyMerge;function clean(dirty){var clean_str=dirty.toString().replace(/[^A-Za-z0-9\.\*]/g,"");return clean_str}function activate(code){if(typeof code=="string"){const{JSDOM:JSDOM}=jsdom;var dom=new JSDOM("",{runScripts:"outside-only"}).window;dom.window.nacl=nacl;dom.window.crypto=crypto;dom.window.logger=logger;dom.eval("var deterministic = (function(){})(); "+code+";");return dom.window.deterministic}console.log(" [!] Error: cannot activate deterministic code!");return function(){}}function implode(glue,pieces){var i="",retVal="",tGlue="";if(arguments.length===1){pieces=glue;glue=""}if(typeof pieces==="object"){if(Object.prototype.toString.call(pieces)==="[object Array]"){return pieces.join(glue)}for(i in pieces){retVal+=tGlue+pieces[i];tGlue=glue}return retVal}return pieces}function sortArrayByObjKey(arr,key,desc){order=typeof order!="undefined"?desc:false;var unordered={};for(var i in arr){unordered[arr[i][key]]=i}var ordered=[];var cnt=0;Object.keys(unordered).sort().forEach(key=>{ordered[cnt]=arr[unordered[key]];cnt++});if(desc){ordered=ordered.reverse()}return ordered}function sortObjectByKey(obj){return Object.keys(obj).sort().reduce((a,v)=>{a[v]=obj[v];return a},{})}function sequential(callbackArray){if(typeof callbackArray==="undefined"){return}if(callbackArray.constructor===Array){if(callbackArray.length>0){var f=callbackArray[0];f(callbackArray.slice(1))}}else{callbackArray()}}function uglyClone(obj){return JSON.parse(JSON.stringify(obj))}function uglyMerge(target,source){for(var key in source){target[key]=uglyClone(source[key])}}
