/******************************************************************************
 * Internet of Coins                                                          *
 * rest.js - amended NPM REST library for performing REST requests            *
 *                                                                            *
 * This work is licensed under the GPLv3. See the LICENSE files at            *
 * the top-level directory of this distribution for the individual copyright  *
 * holder information and the developer policies on copyright and licensing.  *
 *                                                                            *
 * Unless otherwise agreed in a custom licensing agreement, no part of the    *
 * this software, including this file, may be copied, modified, propagated,   *
 * or distributed except according to the terms contained in the LICENSE      *
 * file.                                                                      *
 *                                                                            *
 * Removal or modification of this copyright notice is prohibited.            *
 *                                                                            *
 ******************************************************************************/

var http=require("http"),https=require("https"),urlParser=require("url"),util=require("util"),events=require("events"),zlib=require("zlib");exports.Client=function(a){var b=this;b.options=a||{},b.useProxy=b.options.proxy?!0:!1,b.useProxyTunnel=b.useProxy&&void 0!==b.options.proxy.tunnel?b.options.proxy.tunnel:!1,b.proxy=b.options.proxy,b.connection=b.options.connection||{},b.mimetypes=b.options.mimetypes||{},b.requestConfig=b.options.requestConfig||{},b.responseConfig=b.options.responseConfig||{},this.methods={};var c=function(){events.EventEmitter.call(this)};util.inherits(c,events.EventEmitter),c.prototype.end=function(){_httpRequest.end()},c.prototype.setHttpRequest=function(a){_httpRequest=a};var d={createProxyPath:function(a){var b=a.host;return"https:"===a.protocol&&(b=-1==a.host.indexOf(":")?a.hostname+":443":a.host),b},createProxyHeaders:function(a){var c={};return b.proxy.user&&b.proxy.password&&(c["Proxy-Authorization"]="Basic "+new Buffer([b.proxy.user,b.proxy.password].join(":")).toString("base64")),b.useProxyTunnel||(c.host=a.host),c},createConnectOptions:function(a,c){debug("connect URL = ",a);var d=urlParser.parse(a),e={},f=-1==d.protocol.indexOf(":")?d.protocol:d.protocol.substring(0,d.protocol.indexOf(":")),g="http"===f?80:443;if(e={host:-1==d.host.indexOf(":")?d.host:d.host.substring(0,d.host.indexOf(":")),port:void 0===d.port?g:d.port,path:d.path,protocol:f},b.useProxy&&(e.agent=!1),b.options.user&&b.options.password?e.auth=[b.options.user,b.options.password].join(":"):b.options.user&&!b.options.password&&(e.auth=b.options.user),b.useProxy&&(e.proxy={host:b.proxy.host,port:b.proxy.port,method:b.useProxyTunnel?"CONNECT":c,path:b.useProxyTunnel?this.createProxyPath(d):a,headers:this.createProxyHeaders(d)}),b.connection&&"object"==typeof b.connection)for(var h in b.connection)e[h]=b.connection[h];if(!b.useProxyTunnel){for(h in e.proxy)e[h]=e.proxy[h];delete e.proxy}return e.requestConfig=b.requestConfig,e.responseConfig=b.responseConfig,e},decodeQueryFromURL:function(a){for(var b,c=urlParser.parse(a),d=c.query.substring(1).split("&"),e={},f=0;f<d.length;f++)b=d[f].split("="),e[b[0]]=decodeURIComponent(b[1]);return e},encodeQueryFromArgs:function(a){var b="?",c=1;for(var d in a){var e=d+"="+encodeURIComponent(a[d]);c>1&&(e="&".concat(e)),b=b.concat(e),c++}return b},parsePathParameters:function(a,b){var c=b;if(!a||!a.path)return b;for(var d in a.path){var e=new RegExp("\\$\\{"+d+"\\}","i");c=c.replace(e,a.path[d])}return c},overrideClientConfig:function(a,b){function c(a){return a&&"object"==typeof a}c(b.requestConfig)&&util._extend(a.requestConfig,b.requestConfig),c(b.responseConfig)&&util._extend(a.responseConfig,b.responseConfig)},connect:function(a,c,e,f,g){var h=this.createConnectOptions(this.parsePathParameters(e,c),a);h.method=a,h.clientRequest=g,debug("options pre connect",h),debug("args = ",e),debug("args.data = ",void 0!==e?e.data:void 0),"function"==typeof e?f=e:"object"==typeof e&&(e.headers&&(h.headers=e.headers),void 0!==e.data&&(h.data=e.data,void 0===h.headers&&(h.headers={}),h.headers["Content-Length"]=Buffer.byteLength("string"==typeof e.data?e.data:JSON.stringify(e.data),"utf8")),e.parameters&&Object.keys(e.parameters).length>0&&(h.path+="?"===h.path.charAt(c.length-1)?"?":"",h.path=h.path.concat(d.encodeQueryFromArgs(e.parameters)),debug("options.path after request parameters = ",h.path)),this.overrideClientConfig(h,e)),debug("FINAL SELF object  ====>",b),b.useProxy&&b.useProxyTunnel?ConnectManager.proxy(h,f):ConnectManager.normal(h,f)},mergeMimeTypes:function(a){a&&"object"==typeof a&&(a.json&&a.json instanceof Array&&a.json.length>0?ConnectManager.jsonctype=a.json:a.xml&&a.xml instanceof Array&&a.xml.length>0&&(ConnectManager.xmlctype=a.xml))}},e=function(a,c){var e=b[c.toLowerCase()];return function(b,c){var f=a;return"function"==typeof b?(c=b,b={}):"object"==typeof b&&b.parameters&&Object.keys(b.parameters).length>0&&(a+="?"===a.charAt(a.length-1)?"?":"",f=a.concat(d.encodeQueryFromArgs(b.parameters)),delete b.parameters),e(f,b,c)}};this.get=function(a,b,e){var f=new c;return d.connect("GET",a,b,e,f),f},this.post=function(a,b,e){var f=new c;return d.connect("POST",a,b,e,f),f},this.put=function(a,b,e){var f=new c;return d.connect("PUT",a,b,e,f),f},this["delete"]=function(a,b,e){var f=new c;return d.connect("DELETE",a,b,e,f),f},this.patch=function(a,b,e){var f=new c;return d.connect("PATCH",a,b,e,f),f},this.registerMethod=function(a,b,c){this.methods[a]=new e(b,c)},this.unregisterMethod=function(a){delete this.methods[a]},ConnectManager.on("error",function(a){b.emit("error",a)}),d.mergeMimeTypes(b.mimetypes),debug("ConnectManager",ConnectManager)};var ConnectManager={xmlctype:["application/xml","application/xml;charset=utf-8"],jsonctype:["application/json","application/json;charset=utf-8"],isXML:function(a){var b=!1;if(!a)return b;for(var c=0;c<this.xmlctype.length&&!(b=this.xmlctype[c].toLowerCase()===a.toLowerCase());c++);return b},isJSON:function(a){var b=!1;if(!a)return b;for(var c=0;c<this.jsonctype.length&&!(b=this.jsonctype[c].toLowerCase()===a.toLowerCase());c++);return b},isValidData:function(a){return void 0!==a&&void 0!==a.length&&a.length>0},configureRequest:function(a,b,c){b.timeout&&a.setTimeout(b.timeout,function(){c.emit("requestTimeout",a)}),b.noDelay&&a.setNoDelay(b.noDelay),b.keepAlive&&a.setSocketKeepAlive(b.noDelay,b.keepAliveDelay||0)},configureResponse:function(a,b,c){b.timeout&&a.setTimeout(b.timeout,function(){c.emit("responseTimeout",a),a.close()})},handleEnd:function(a,b,c){var d=this,e=a.headers["content-type"],f=a.headers["content-encoding"];debug("content-type: ",e),debug("content-encoding: ",f),void 0!==f&&f.indexOf("gzip")>=0?(debug("gunzip"),zlib.gunzip(Buffer.concat(b),function(b,e){d.handleResponse(a,e,c)})):void 0!==f&&f.indexOf("deflate")>=0?(debug("inflate"),zlib.inflate(Buffer.concat(b),function(b,e){d.handleResponse(a,e,c)})):(debug("not compressed"),d.handleResponse(a,Buffer.concat(b).toString(),c))},handleResponse:function(a,b,c){var d=a.headers["content-type"];if(debug("response content is ",d),this.isJSON(d)){var e;try{e=this.isValidData(b)?JSON.parse(b):b}catch(f){e="Error parsing response. response: ["+b+"], error: ["+f+"]"}c(e,a)}else c(b,a)},prepareData:function(a){var b;return b=a instanceof Buffer||"object"!=typeof a?a:JSON.stringify(a)},proxy:function(a,b){debug("proxy options",a.proxy);var c=http.request(a.proxy),d=this;c.on("connect",function(c,e,f){debug("proxy connected",e),a.socket=e;var g=[],h="http"==a.protocol?http:https,i=a.clientRequest,j=a.requestConfig,k=a.responseConfig;delete a.protocol,delete a.clientRequest,delete a.requestConfig,delete a.responseConfig,i.options=a;var l=h.request(a,function(a){d.configureResponse(a,k,i),a.on("data",function(a){g.push(new Buffer(a))}),a.on("end",function(){d.handleEnd(a,g,b)}),a.on("error",function(b){void 0!==i&&"object"==typeof i?(b.request=i,b.response=a,i.emit("error",b)):d.emit("error",b)})});d.configureRequest(l,j,i),i.setHttpRequest(l),a.data&&l.write(this.prepareData(a.data)),l.on("error",function(a){void 0!==i&&"object"==typeof i?(a.request=i,i.emit("error",a)):d.emit("error",a)}),l.end()}),c.on("error",function(a){d.emit("error",a)}),c.end()},normal:function(a,b){var c=[],d="http"===a.protocol?http:https,e=a.clientRequest,f=a.requestConfig,g=a.responseConfig,h=this;delete a.protocol,delete a.clientRequest,delete a.requestConfig,delete a.responseConfig,debug("options pre connect",a),e.options=a;var i=d.request(a,function(a){h.configureResponse(a,g,e),a.on("data",function(a){c.push(new Buffer(a))}),a.on("end",function(){h.handleEnd(a,c,b)}),a.on("error",function(b){void 0!==e&&"object"==typeof e?(b.request=e,b.response=a,e.emit("error",b)):h.emit("error",b)})});h.configureRequest(i,f,e),debug("clientRequest",e),e.setHttpRequest(i),i.on("error",function(a){debug("request error",e),void 0!==e&&"object"==typeof e?(a.request=e,e.emit("error",a)):h.emit("error",a)}),debug("options data",a.data),a.data&&i.write(this.prepareData(a.data)),i.end()}};util.inherits(exports.Client,events.EventEmitter),util._extend(ConnectManager,events.EventEmitter.prototype);var debug=function(){if(process.env.DEBUG){var a=new Date,b=a.getHours()+":"+a.getMinutes()+":"+a.getSeconds()+" [NRC CLIENT]"+arguments.callee.caller.name+" -> ",c=Array.prototype.slice.call(arguments);c.splice(0,0,b),console.log.apply(console,c)}};
