function init(){module.name="altcoin",module.busy=!1;for(var a in global.hybridd.asset)"undefined"!=typeof global.hybridd.asset[a].module&&global.hybridd.asset[a].module==module.name&&authconnect(a);for(var b in global.hybridd.source)"undefined"!=typeof global.hybridd.source[b].module&&global.hybridd.source[b].module==module.name&&authconnect(b)}function stop(){}function tick(a){}function exec(a){var b=a.processID,c=(a.source,a.target,a.type,"undefined"!=typeof a.factor?a.factor:8,[]);global.hybridd.proc[b].request=a.command;switch(a.command[0]){case"address":c.push('stop(0,"Not yet supported!")');break;case"balance":c.push('stop(1,"N/A")');break;default:c.push('stop(1,"Asset function not supported!")')}return c}function post(a){var b=a.processID,c=scheduler.procpart(a.processID),d=c[0],e=c[2],f=global.hybridd.proc[e].data;switch(global.hybridd.proc[b].data=a.command,a.command[1]){case"any complex data postprocessing can be done here!":}global.hybridd.proc[e].err||"undefined"==typeof f?(DEBUG&&console.log(" [D] error in process data of "+e+" to parent "+d),global.hybridd.proc[d].data=null,global.hybridd.proc[d].err=1):(global.hybridd.proc[d].data=String(f),DEBUG&&console.log(" [D] copying process data of "+e+" to parent "+d)),global.hybridd.proc[b].stopped=Date.now(),global.hybridd.proc[b].progress=1}function link(properties){var processID=properties.processID,target=properties.target,command=properties.command;console.log(" [.] module altcoin: sending RPC call to ["+target.name+"] -> "+command.join(" "));var flexinput="";command.forEach(function(a,b,c){flexinput=flexinput+"command["+b+"],"}),flexinput=flexinput.rTrim(","),altcoin.set("host",target.host).set("port",target.port).auth(target.user,target.pass);var cmdstring="altcoin 		.exec( "+flexinput+" 			,function(err,result) { 				if(err == null || err == {}) { err = 0; } else { 					err = err['code']; 				} 				if(typeof result == 'undefined') { 					err = 1; 					result = null; 				} 				global.hybridd.proc[processID].err=err; 				global.hybridd.proc[processID].data=result; 				global.hybridd.proc[processID].progress=1; 				var currentdate = new Date(); 				global.hybridd.proc[processID].stopped=Date.now(); 		}); ";eval(cmdstring)}function authconnect(a){module.busy?setTimeout(function(){authconnect(a)},3e3):(module.busy=!0,altcoin.set("host",global.hybridd.asset[a].host).set("port",global.hybridd.asset[a].port).auth(global.hybridd.asset[a].user,global.hybridd.asset[a].pass).exec("help",function(b,c){b?console.log(" [!] module altcoin: failed connection to ["+a+"] host "+global.hybridd.asset[a].host+":"+global.hybridd.asset[a].port):console.log(" [i] module altcoin: connected to ["+a+"] host "+global.hybridd.asset[a].host+":"+global.hybridd.asset[a].port),module.busy=!1}))}var altcoin=require("./altcoin")();exports.init=init,exports.exec=exec,exports.tick=tick,exports.post=post,exports.stop=stop,exports.link=link;